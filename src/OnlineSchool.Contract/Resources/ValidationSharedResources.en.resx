<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CardNumber" xml:space="preserve">
    <value>Your card number is incomplete.</value>
  </data>
  <data name="CheckEmailError" xml:space="preserve">
    <value>An error occurred. Check your email address and try it again.</value>
  </data>
  <data name="ColorLength" xml:space="preserve">
    <value>The color must be at max 50 characters long.</value>
  </data>
  <data name="ConfirmEmailSuccess" xml:space="preserve">
    <value>Your email has been confirmed successfully.</value>
  </data>
  <data name="CVC" xml:space="preserve">
    <value>CVC is incomplete.</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description is required.</value>
  </data>
  <data name="DescriptionLength" xml:space="preserve">
    <value>The description cannot be more than 500 characters long.</value>
  </data>
  <data name="EmailConfirmedOnce" xml:space="preserve">
    <value>Your email account has been confirmed once.</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is required.</value>
  </data>
  <data name="ExpireDate" xml:space="preserve">
    <value>Expiration date is incomplete.</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Please enter your full name (FirstName/space/LastName).</value>
  </data>
  <data name="GenderRequired" xml:space="preserve">
    <value>Gender is required.</value>
  </data>
  <data name="ImagePathLength" xml:space="preserve">
    <value>The image name cannot be more than 500 characters long.</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Invalid email.</value>
  </data>
  <data name="InvalidLogin" xml:space="preserve">
    <value>Invalid login attempt.</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>Invalid password.</value>
  </data>
  <data name="LoadUserError" xml:space="preserve">
    <value>Unable to load user with ID userId!</value>
  </data>
  <data name="MustConfirmEmailError" xml:space="preserve">
    <value>You must confirm your email in order to log in.</value>
  </data>
  <data name="NameLength" xml:space="preserve">
    <value>The name must be at least 2 and at max 100 characters long.</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>The Name field is required.</value>
  </data>
  <data name="PasswordMatch" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is required.</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price is required.</value>
  </data>
  <data name="PriceFormat" xml:space="preserve">
    <value>Invalid price. Maximum decimal points: 2</value>
  </data>
  <data name="PriceLength" xml:space="preserve">
    <value>Invalid price. Maximum length: 10</value>
  </data>
  <data name="ResetPasswordEmailSent" xml:space="preserve">
    <value>An email has been send to this email address. Check your email address.</value>
  </data>
  <data name="ResetPasswordSuccess" xml:space="preserve">
    <value>Your password has been reset succesfully.</value>
  </data>
  <data name="SubjectNameLength" xml:space="preserve">
    <value>The name must be at least 2 and at max 50 characters long.</value>
  </data>
  <data name="SurnameLength" xml:space="preserve">
    <value>The surname must be at least 2 and at max 100 characters long.</value>
  </data>
  <data name="SurnameRequired" xml:space="preserve">
    <value>The Surname field is required.</value>
  </data>
  <data name="TryAgainEmailConfirmation" xml:space="preserve">
    <value>An error ocurred. Please,Try again to confirm your email!</value>
  </data>
  <data name="TryAgainError" xml:space="preserve">
    <value>An error occurred. Please, try it again</value>
  </data>
  <data name="UserCreationSuccess" xml:space="preserve">
    <value>User created successfully. Check your email for verification</value>
  </data>
  <data name="UserNotFoundError" xml:space="preserve">
    <value>An error occurred. User not found.</value>
  </data>
  <data name="UserNotRegistredOrEmailNotConfirmed" xml:space="preserve">
    <value>An error occurred. User is not registered or has not confirmed the email.</value>
  </data>
  <data name="UserWithEmailNotFound" xml:space="preserve">
    <value>User with email Email not found.</value>
  </data>
  <data name="ValidEmail" xml:space="preserve">
    <value>You must provide a valid email address.</value>
  </data>
  <data name="ValidPassword" xml:space="preserve">
    <value>Minimum eight characters, at least one uppercase letter, one lowercase letter and one number:</value>
  </data>
</root>