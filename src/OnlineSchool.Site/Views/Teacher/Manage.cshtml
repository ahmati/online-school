
@section Styles {
    <link rel="stylesheet" href="~/css/grid-style.css" />
}

<h6 class="page-title"> @SharedResources.Teachers </h6>

<div class="row mx-0 p-0">
    <div class="col-12 m-0 py-4 padding-lr bg-grey">

        @(Html.Kendo().Grid<OnlineSchool.Contract.Teachers.TeacherModel>()
            .Name("teachers-grid")
            .NoRecords()
            .ToolBar(toolbar =>
            {
                toolbar.ClientTemplateId("teachers-grid-toolbar");
            })
            .Search(search =>
            {
                search.Field(m => m.Name);
                search.Field(m => m.Surname);
                search.Field(m => m.Email);
            })
            .Columns(columns =>
            {
                columns.Bound(s => s.Id).Visible(false);
                columns.Bound(s => s.Name).Title(SharedResources.Name).Width(150)
                    .ClientTemplate("#= renderTeacher(data) #");
                columns.Bound(s => s.Email).Title(SharedResources.Email).Width(150);
                columns.Bound(s => s.Gender).Title(SharedResources.Gender).Width(100);
                columns.Template(@"
                        <div class='text-center'>
                            <a href='/teacher/edit/#=Id#' class='btn btn-sm btn-light border m-1' title='" + SharedResources.Edit + @"'>
                                <i class='fas fa-edit'></i>
                            </a>
                            <button class='btn btn-sm btn-secondary m-1' title='" + SharedResources.ResetPassword + @"' onclick='onShowResetPasswordModal(""#=Email#"");'>
                                <i class='fas fa-unlock-alt'></i>
                            </button>
                            <button class='btn btn-sm btn-danger text-white m-1' onclick='onDeleteTeacher(#=Id#);' title='" + SharedResources.Delete + @"'>
                                <i class='far fa-trash-alt'></i>
                            </button>
                        </div>
                    ")
                    .Title(@SharedResources.Actions)
                    .Width(120);
            })
            .Sortable()
            .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(5)
            )
            .Scrollable()
            .ClientDetailTemplateId("template")
            //.Editable(editable => editable.Mode(GridEditMode.InLine))
            .HtmlAttributes(new { style = "height: 600px;" })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(10)
                .Read(read => read.Action("GetAllTeachers", "Teacher").Type(HttpVerbs.Get))
            )
            .Events(events => events.DetailExpand("expandDetails"))
            .Deferred()
        )

    </div>
</div>

<!-- Grid row template -->
<script id="template" type="text/kendo-tmpl">

    @(Html.Kendo().Grid<OnlineSchool.Contract.Teachers.TeacherSocialNetworkModel>()
        .Name("social-grid-#=Id#")
        .NoRecords()
        .ToolBar(toolbar =>
        {
            toolbar.ClientTemplate("" +
                "<div class='social-grid-#=Id#-actions m-2 ml-0'>" +
                    "<button class='btn btn-active-primary btn-light btn-sm' onclick='onAddTeacherSocial(#=Id#);' title='" + SharedResources.NewSocial + "'>" +
                        "<i class='k-icon k-i-plus'></i>" + SharedResources.NewSocial +
                    "</button> " +
                    "<span class='k-textbox k-grid-search k-display-flex'>" +
                        "<input autocomplete='off' placeholder='" + @SharedResources.SEARCH + "...' title='" + @SharedResources.SEARCH + "...' class='k-input'>" +
                        "<span class='k-input-icon'>" +
                            "<span class='k-icon k-i-search'></span>" +
                        "</span>" +
                    "</span>" +
                "</div> " +
            "");
        })
        .Search(search => 
        {
            search.Field(m => m.SocialNetwork.Description);
            search.Field(m => m.Link);
        })
        .Columns(columns =>
        {
            columns.Bound(p => p.TeacherId).Visible(false);
            columns.Bound(p => p.SocialNetworkId).Visible(false);
            columns.Bound(p => p.SocialNetwork.Description).Title(SharedResources.SocialMediaType).Width(1);
            columns.Bound(p => p.Link).Width(2);
            columns.Template("" +
                "<div class='text-left'>" +
                    "<button class='btn btn-sm btn-light border m-1' title='" + SharedResources.EditSocial + "' onclick='onEditTeacherSocial(this, #=Id#);'> " +
                        "<i class='fas fa-edit'></i> " +
                    "</button> " +
                    "<button class='btn btn-sm btn-danger text-white m-1' title='" + SharedResources.DeleteSocial + "' onclick='onDeleteTeacherSocial(this, #=Id#);'> " +
                        "<i class='far fa-trash-alt'></i> " +
                    "</button> " +
                "</div>")
                .Title(SharedResources.Actions)
                .Width(1);
        })
        //.Editable(editable => editable.Mode(GridEditMode.InLine))
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(3)
            .Model(model =>
            {
                model.Id(p => p.TeacherId);
            })
            .Read(read => read.Action("GetTeacherSocialNetworks", "Teacher", new { TeacherId = "#=Id#" }).Type(HttpVerbs.Get))
        )
        //.Editable(editing => editing.Mode(GridEditMode.PopUp))
        .Sortable()
        .ToClientTemplate()
    )
</script>

<!-- Reset password modal -->
<div id="reset-pw-modal" class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="reset-pw-modal-label" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="reset-pw-modal-label"> @SharedResources.ResetPassword </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <form id="reset-password-form" class="my-4">

                    <div class="validation-summary-errors text-danger mb-4">
                        <ul id="reset-password-errors"></ul>
                    </div>

                    <input type="hidden" id="email-field" name="email-field" />

                    <div class="form-group">
                        <label for="password-field" class="form-control-placeholder"> @SharedResources.NewPassword </label>
                        <input type="password" class="form-control" id="password-field" name="password-field" required />
                    </div>

                    <div class="form-group text-right">
                        <button type="button" class="btn btn-sm btn-light border" data-dismiss="modal"> @SharedResources.Close </button>
                        <button type="submit" class="btn btn-sm my-btn-primary ml-2"> @SharedResources.Save </button>
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>

<!-- Teacher social modal -->
<div id="social-modal" class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="social-modal-label" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="social-modal-label"> @SharedResources.AddSocial </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <form id="social-form" class="my-4">

                    <div class="validation-summary-errors text-danger mb-4">
                        <ul id="social-errors"></ul>
                    </div>

                    <input type="hidden" id="teacherId-field" name="teacherId-field" />

                    <div class="form-group">
                        <label for="social-type" class="form-control-placeholder"> @SharedResources.SocialType </label>
                        <select class="custom-select" id="social-type-field" name="social-type-field">
                            <option disabled value="0" selected> @SharedResources.SelectSocialNetwork </option>
                            @foreach (var s in (Dictionary<int, string>)ViewBag.SocialTypes)
                            {
                                <option value="@s.Key"> @s.Value </option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="link-field" class="form-control-placeholder"> Link </label>
                        <input type="url" class="form-control" id="link-field" name="link-field" required />
                    </div>

                    <div class="form-group text-right">
                        <button type="button" class="btn btn-sm btn-light border" data-dismiss="modal"> @SharedResources.Close </button>
                        <button type="submit" class="btn btn-sm my-btn-primary ml-2"> @SharedResources.Save </button>
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <!-- Grid toolbar template -->
    <script id="teachers-grid-toolbar" type="text/x-kendo-template">

        <div class="meetings-grid-actions m-2 ml-0 float-left">
            <a href="/Teacher/Create" class="btn btn-active-primary btn-light btn-sm" title="@SharedResources.NewTeacher">
                <i class="k-icon k-i-plus"></i> @SharedResources.NewTeacher
            </a>
        </div>
        <span class="k-textbox k-grid-search k-display-flex">
            <input autocomplete="off" placeholder="@SharedResources.SEARCH..." title="@SharedResources.SEARCH..." class="k-input">
            <span class="k-input-icon">
                <span class="k-icon k-i-search"></span>
            </span>
        </span>

    </script>

    <script type="text/javascript">

        $(document).ready(() => {
            // Variables (references, flags etc.)
            let isSocialEdit;
            let resetPasswordModal = $('#reset-pw-modal');
            let socialModal = $('#social-modal');

            let message = '@TempData["Success"]';
            if (message)
                ShowSuccess(message);

            renderTeacher = (data) => {
                let description = data.Description;

                if (description == null) {
                    description = " ";
                }
                else if (description.length > 21) {
                    description = description.substring(0, 18) + "...";
                }

                let url = "";
                if (data.ImagePath != null) {
                    url = `/uploads/teachers/${data.Id}/${data.ImagePath}`;
                }
                else {
                    url = '/images/image3.png';
                }

                let detailsUrl = `/Teacher/${data.Id}/Details`;

                return `<div class="d-flex align-items-center">
                            <div class="symbol symbol-45px me-5">
                                <img src="${url}" alt="" />
                            </div>
                            <div class="d-flex justify-content-start flex-column">
                                <a href="${detailsUrl}" class="fw-bolder text-hover-primary fs-6">${data.Name} ${data.Surname}</a>
                                <span class="text-muted fw-bold d-block fs-7">${description}</span>
                            </div>
                        </div>`;
            }

            onDeleteTeacher = (data) => {
                ShowConfirmation(
                    `Are you sure you want to delete the teacher?`,
                    '',
                    () => {
                        alert('Deleted')
                    },
                    null
                )
            }

            //#region Password reset

            onShowResetPasswordModal = (email) => {
                resetPasswordModal.modal('show');
                // Set email hidden field value
                $('#email-field').val(email);
            }

            closeResetPasswordModal = () => {
                resetPasswordModal.modal('hide');
            }

            clearResetPasswordForm = () => {
                $('#reset-password-errors').html('');
                $('#email-field').val('');
                $('#password-field').val('');
            }

            $('#reset-password-form').submit(e => {
                e.preventDefault();

                let email = $('#email-field').val();
                let password = $('#password-field').val();

                // Todo: Ajax call here
                $.ajax({
                    type: 'POST',
                    url: '/Teacher/ResetPassword',
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify({ email, password }),
                    success: data => {
                        // Ok
                        if (data.HasErrors === false) {
                            ShowSuccess('Password reset successful.');
                            closeResetPasswordModal();
                        }
                        // Errors
                        else {
                            let errors = '';
                            data.Errors.forEach(e => {
                                errors += `<li> ${e} </li>`;
                            });
                            $('#reset-password-errors').html(errors);
                        }
                    },
                    fail: err => {
                        console.log(err.Errors);
                        ShowError(err);
                    }
                });
            })

            // Clear reset-password-modal fields on close
            resetPasswordModal.on('hidden.bs.modal', function (event) {
                clearResetPasswordForm();
            });

            //#endregion

            //#region Teacher social

            onAddTeacherSocial = (id) => {
                isSocialEdit = false;
                $("#teacherId-field").val(id);
                showSocialModal();
            };

            onEditTeacherSocial = (e, teacherId) => {
                isSocialEdit = true;
                var grid = $(`#social-grid-${teacherId}`).data("kendoGrid");
                var dataItem = grid.dataItem($(e).closest("tr"));

                $("#teacherId-field").val(dataItem.TeacherId);
                $("#social-type-field").val(dataItem.SocialNetworkId);
                $("#social-type-field").attr('disabled', true)
                $("#link-field").val(dataItem.Link);

                showSocialModal();
            };

            onDeleteTeacherSocial = (e, teacherId) => {
                ShowConfirmation(
                    `Are you sure you want to delete this social media?`,
                    '',
                    () => {
                        var grid = $(`#social-grid-${teacherId}`).data("kendoGrid");
                        var dataItem = grid.dataItem($(e).closest("tr"));

                        var model = {
                            TeacherId: dataItem.TeacherId,
                            SocialNetworkId: dataItem.SocialNetworkId,
                        };
                        console.log(dataItem.SocialNetworkId);
                        // Todo: Ajax call here
                        $.ajax({
                            type: 'POST',
                            url: '/Teacher/DeleteSocial',
                            contentType: "application/json",
                            dataType: "json",
                            data: JSON.stringify(model),
                            success: data => {
                                // Ok
                                if (data.HasErrors === false) {
                                    ShowSuccess('Social media delete successful.');
                                    refreshKendoGrid(`social-grid-${teacherId}`);
                                }
                                // Errors
                                else {
                                    let errors = '';
                                    // Show something
                                }
                            },
                            fail: err => {
                                console.log(err.Errors);
                                ShowError(err);
                            }
                        });
                    },
                    null
                )
            }

            // Add teacher social
            $('#social-form').submit(e => {
                e.preventDefault();

                var model = {
                    TeacherId: parseInt($('#teacherId-field').val()),
                    SocialNetworkId: parseInt($("#social-type-field").val()),
                    Link: String($('#link-field').val())
                };

                // Create
                if (isSocialEdit === false) {
                    $.ajax({
                        type: 'POST',
                        url: '/Teacher/CreateSocial',
                        contentType: "application/json",
                        dataType: "json",
                        data: JSON.stringify(model),
                        success: data => {
                            // Ok
                            if (data.HasErrors === false) {
                                ShowSuccess('Teacher social network created successfully.');
                                closeSocialModal();
                                refreshKendoGrid(`social-grid-${model.TeacherId}`);
                            }
                            // Errors
                            else {
                                let errors = '';
                                data.Errors.forEach(e => {
                                    errors += `<li> ${e} </li>`;
                                });
                                $('#social-errors').html(errors);
                            }
                        },
                        fail: err => {
                            console.log(err.Errors);
                            ShowError(err);
                        }
                    });
                }
                // Edit
                else if (isSocialEdit === true) {
                    $.ajax({
                        type: 'POST',
                        url: '/Teacher/EditSocial',
                        contentType: "application/json",
                        dataType: "json",
                        data: JSON.stringify(model),
                        success: data => {
                            // Ok
                            if (data.HasErrors === false) {
                                ShowSuccess('Teacher social network updated successfully.');
                                closeSocialModal();
                                refreshKendoGrid(`social-grid-${model.TeacherId}`);
                            }
                            // Errors
                            else {
                                let errors = '';
                                data.Errors.forEach(e => {
                                    errors += `<li> ${e} </li>`;
                                });
                                $('#social-errors').html(errors);
                            }
                        },
                        fail: err => {
                            console.log(err.Errors);
                            ShowError(err);
                        }
                    });
                }
            });

            showSocialModal = () => {
                socialModal.modal('show');
            }

            closeSocialModal = () => {
                socialModal.modal('hide');
            }

            clearSocialForm = () => {
                $('#social-errors').html('');
                $('#teacherId-field').val('');
                $('#social-type-field').val(0);
                $('#social-type-field').removeAttr('disabled');
                $('#link-field').val('');
            }

            socialModal.on('hidden.bs.modal', function (event) {
                clearSocialForm();
            });

            //#endregion
        });

        function expandDetails(e) {
            DocumentId = e.masterRow[0].cells[1].innerHTML;
            var grid = e.sender;
            var rows = grid.element.find(".k-master-row").not(e.masterRow);
            rows.each(function (e) {
                grid.collapseRow(this);
            });
        };

    </script>
}





